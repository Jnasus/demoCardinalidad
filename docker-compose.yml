version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: demo-cardinalidad-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dbCardinalidad
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo123
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/db:/docker-entrypoint-initdb.d
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Aplicaci√≥n Spring Boot
  app:
    build: .
    container_name: demo-cardinalidad-app
    ports:
      - "8082:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/dbCardinalidad?createDatabaseIfNotExist=TRUE
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: true
      SPRING_SQL_INIT_MODE: always
      SERVER_PORT: 8081
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - demo-network
    restart: unless-stopped

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: demo-cardinalidad-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - demo-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  demo-network:
    driver: bridge 