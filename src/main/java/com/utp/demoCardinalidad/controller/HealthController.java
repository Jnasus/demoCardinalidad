package com.utp.demoCardinalidad.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.Map;

/**
 * üè• Controlador para verificar el estado de salud de la aplicaci√≥n
 * 
 * @author demoCardinalidad
 * @version 1.0
 */
@RestController
public class HealthController {

    /**
     * üîç Endpoint para verificar el estado de salud de la aplicaci√≥n
     * 
     * @return ResponseEntity con el estado de la aplicaci√≥n
     */
    @GetMapping("/health")
    public ResponseEntity<Map<String, Object>> health() {
        Map<String, Object> response = new HashMap<>();
        response.put("status", "UP");
        response.put("application", "demoCardinalidad");
        response.put("timestamp", System.currentTimeMillis());
        response.put("version", "1.0.0");
        response.put("port", System.getProperty("server.port", "8081"));
        response.put("java.version", System.getProperty("java.version"));
        
        // Informaci√≥n de variables de entorno para diagn√≥stico
        Map<String, String> env = new HashMap<>();
        env.put("PORT", System.getenv("PORT"));
        env.put("MYSQLHOST", System.getenv("MYSQLHOST"));
        env.put("MYSQLPORT", System.getenv("MYSQLPORT"));
        env.put("MYSQLDATABASE", System.getenv("MYSQLDATABASE"));
        env.put("MYSQLUSER", System.getenv("MYSQLUSER"));
        env.put("MYSQLPASSWORD", System.getenv("MYSQLPASSWORD") != null ? "***" : null);
        response.put("environment", env);
        
        return ResponseEntity.ok(response);
    }

    /**
     * üè† Endpoint ra√≠z para verificar que la aplicaci√≥n est√° funcionando
     * 
     * @return ResponseEntity con informaci√≥n b√°sica
     */
    @GetMapping("/")
    public ResponseEntity<Map<String, String>> root() {
        Map<String, String> response = new HashMap<>();
        response.put("message", "üöÄ demoCardinalidad API est√° funcionando correctamente!");
        response.put("status", "UP");
        response.put("swagger", "/swagger-ui.html");
        response.put("health", "/health");
        response.put("test", "/test");
        
        return ResponseEntity.ok(response);
    }

    /**
     * üß™ Endpoint de prueba simple
     * 
     * @return ResponseEntity con respuesta simple
     */
    @GetMapping("/test")
    public ResponseEntity<String> test() {
        return ResponseEntity.ok("‚úÖ Test endpoint funcionando!");
    }
} 